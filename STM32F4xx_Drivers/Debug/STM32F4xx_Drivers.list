
STM32F4xx_Drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000658  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000800  08000808  00010808  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000800  08000800  00010808  2**0
                  CONTENTS
  4 .ARM          00000000  08000800  08000800  00010808  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000800  08000808  00010808  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000800  08000800  00010800  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000804  08000804  00010804  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010808  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00010808  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00010808  2**0
                  CONTENTS, READONLY
 13 .debug_info   00001b32  00000000  00000000  00010838  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000417  00000000  00000000  0001236a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000b8  00000000  00000000  00012788  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000090  00000000  00000000  00012840  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000023e3  00000000  00000000  000128d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000011e4  00000000  00000000  00014cb3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000940f  00000000  00000000  00015e97  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  0001f2a6  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000224  00000000  00000000  0001f2fc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	080007e8 	.word	0x080007e8

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	080007e8 	.word	0x080007e8

080001e8 <GPIO_PeriControl_Clock>:

************************************************************/


void GPIO_PeriControl_Clock(GPIO_REG_DEF_T *pGPIOx, uint8_t EnorDi)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	6078      	str	r0, [r7, #4]
 80001f0:	460b      	mov	r3, r1
 80001f2:	70fb      	strb	r3, [r7, #3]
    if(EnorDi==ENABLE)
 80001f4:	78fb      	ldrb	r3, [r7, #3]
 80001f6:	2b01      	cmp	r3, #1
 80001f8:	d14c      	bne.n	8000294 <GPIO_PeriControl_Clock+0xac>
    {
//    	Enable the Clock
    	if(pGPIOx==GPIOA)
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a59      	ldr	r2, [pc, #356]	; (8000364 <GPIO_PeriControl_Clock+0x17c>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d106      	bne.n	8000210 <GPIO_PeriControl_Clock+0x28>
    	{
    		GPIOA_PCLK_EN();
 8000202:	4b59      	ldr	r3, [pc, #356]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 8000204:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000206:	4a58      	ldr	r2, [pc, #352]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 8000208:	f043 0301 	orr.w	r3, r3, #1
 800020c:	6313      	str	r3, [r2, #48]	; 0x30
    					{
    						GPIOI_PCLK_DIS();
    					}
    }

}
 800020e:	e0a3      	b.n	8000358 <GPIO_PeriControl_Clock+0x170>
    	else if (pGPIOx == GPIOB)
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	4a56      	ldr	r2, [pc, #344]	; (800036c <GPIO_PeriControl_Clock+0x184>)
 8000214:	4293      	cmp	r3, r2
 8000216:	d106      	bne.n	8000226 <GPIO_PeriControl_Clock+0x3e>
    			GPIOB_PCLK_EN();
 8000218:	4b53      	ldr	r3, [pc, #332]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 800021a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800021c:	4a52      	ldr	r2, [pc, #328]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 800021e:	f043 0302 	orr.w	r3, r3, #2
 8000222:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000224:	e098      	b.n	8000358 <GPIO_PeriControl_Clock+0x170>
    	else if (pGPIOx == GPIOC) {
 8000226:	687b      	ldr	r3, [r7, #4]
 8000228:	4a51      	ldr	r2, [pc, #324]	; (8000370 <GPIO_PeriControl_Clock+0x188>)
 800022a:	4293      	cmp	r3, r2
 800022c:	d106      	bne.n	800023c <GPIO_PeriControl_Clock+0x54>
    			GPIOC_PCLK_EN();
 800022e:	4b4e      	ldr	r3, [pc, #312]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 8000230:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000232:	4a4d      	ldr	r2, [pc, #308]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 8000234:	f043 0304 	orr.w	r3, r3, #4
 8000238:	6313      	str	r3, [r2, #48]	; 0x30
}
 800023a:	e08d      	b.n	8000358 <GPIO_PeriControl_Clock+0x170>
    	else if (pGPIOx == GPIOD)
 800023c:	687b      	ldr	r3, [r7, #4]
 800023e:	4a4d      	ldr	r2, [pc, #308]	; (8000374 <GPIO_PeriControl_Clock+0x18c>)
 8000240:	4293      	cmp	r3, r2
 8000242:	d106      	bne.n	8000252 <GPIO_PeriControl_Clock+0x6a>
    			GPIOD_PCLK_EN();
 8000244:	4b48      	ldr	r3, [pc, #288]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 8000246:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000248:	4a47      	ldr	r2, [pc, #284]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 800024a:	f043 0308 	orr.w	r3, r3, #8
 800024e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000250:	e082      	b.n	8000358 <GPIO_PeriControl_Clock+0x170>
    	else if (pGPIOx == GPIOE)
 8000252:	687b      	ldr	r3, [r7, #4]
 8000254:	4a48      	ldr	r2, [pc, #288]	; (8000378 <GPIO_PeriControl_Clock+0x190>)
 8000256:	4293      	cmp	r3, r2
 8000258:	d106      	bne.n	8000268 <GPIO_PeriControl_Clock+0x80>
    			GPIOE_PCLK_EN();
 800025a:	4b43      	ldr	r3, [pc, #268]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 800025c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800025e:	4a42      	ldr	r2, [pc, #264]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 8000260:	f043 0310 	orr.w	r3, r3, #16
 8000264:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000266:	e077      	b.n	8000358 <GPIO_PeriControl_Clock+0x170>
    	else if (pGPIOx == GPIOF)
 8000268:	687b      	ldr	r3, [r7, #4]
 800026a:	4a44      	ldr	r2, [pc, #272]	; (800037c <GPIO_PeriControl_Clock+0x194>)
 800026c:	4293      	cmp	r3, r2
 800026e:	d106      	bne.n	800027e <GPIO_PeriControl_Clock+0x96>
    		GPIOF_PCLK_EN();
 8000270:	4b3d      	ldr	r3, [pc, #244]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 8000272:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000274:	4a3c      	ldr	r2, [pc, #240]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 8000276:	f043 0320 	orr.w	r3, r3, #32
 800027a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800027c:	e06c      	b.n	8000358 <GPIO_PeriControl_Clock+0x170>
    	else if (pGPIOx == GPIOI){
 800027e:	687b      	ldr	r3, [r7, #4]
 8000280:	4a3f      	ldr	r2, [pc, #252]	; (8000380 <GPIO_PeriControl_Clock+0x198>)
 8000282:	4293      	cmp	r3, r2
 8000284:	d168      	bne.n	8000358 <GPIO_PeriControl_Clock+0x170>
    	    GPIOI_PCLK_EN();
 8000286:	4b38      	ldr	r3, [pc, #224]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 8000288:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800028a:	4a37      	ldr	r2, [pc, #220]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 800028c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000290:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000292:	e061      	b.n	8000358 <GPIO_PeriControl_Clock+0x170>
    	if(pGPIOx == GPIOA){
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	4a33      	ldr	r2, [pc, #204]	; (8000364 <GPIO_PeriControl_Clock+0x17c>)
 8000298:	4293      	cmp	r3, r2
 800029a:	d106      	bne.n	80002aa <GPIO_PeriControl_Clock+0xc2>
    						GPIOA_PCLK_DIS();
 800029c:	4b32      	ldr	r3, [pc, #200]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 800029e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a0:	4a31      	ldr	r2, [pc, #196]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 80002a2:	f023 0301 	bic.w	r3, r3, #1
 80002a6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002a8:	e056      	b.n	8000358 <GPIO_PeriControl_Clock+0x170>
    	else if (pGPIOx == GPIOB)
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	4a2f      	ldr	r2, [pc, #188]	; (800036c <GPIO_PeriControl_Clock+0x184>)
 80002ae:	4293      	cmp	r3, r2
 80002b0:	d106      	bne.n	80002c0 <GPIO_PeriControl_Clock+0xd8>
    						GPIOB_PCLK_DIS();
 80002b2:	4b2d      	ldr	r3, [pc, #180]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 80002b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002b6:	4a2c      	ldr	r2, [pc, #176]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 80002b8:	f023 0302 	bic.w	r3, r3, #2
 80002bc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002be:	e04b      	b.n	8000358 <GPIO_PeriControl_Clock+0x170>
    	else if (pGPIOx == GPIOC)
 80002c0:	687b      	ldr	r3, [r7, #4]
 80002c2:	4a2b      	ldr	r2, [pc, #172]	; (8000370 <GPIO_PeriControl_Clock+0x188>)
 80002c4:	4293      	cmp	r3, r2
 80002c6:	d106      	bne.n	80002d6 <GPIO_PeriControl_Clock+0xee>
    						GPIOC_PCLK_DIS();
 80002c8:	4b27      	ldr	r3, [pc, #156]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 80002ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002cc:	4a26      	ldr	r2, [pc, #152]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 80002ce:	f023 0304 	bic.w	r3, r3, #4
 80002d2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002d4:	e040      	b.n	8000358 <GPIO_PeriControl_Clock+0x170>
    	else if (pGPIOx == GPIOD)
 80002d6:	687b      	ldr	r3, [r7, #4]
 80002d8:	4a26      	ldr	r2, [pc, #152]	; (8000374 <GPIO_PeriControl_Clock+0x18c>)
 80002da:	4293      	cmp	r3, r2
 80002dc:	d106      	bne.n	80002ec <GPIO_PeriControl_Clock+0x104>
    						GPIOD_PCLK_DIS();
 80002de:	4b22      	ldr	r3, [pc, #136]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 80002e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002e2:	4a21      	ldr	r2, [pc, #132]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 80002e4:	f023 0308 	bic.w	r3, r3, #8
 80002e8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002ea:	e035      	b.n	8000358 <GPIO_PeriControl_Clock+0x170>
    	else if (pGPIOx == GPIOE)
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	4a22      	ldr	r2, [pc, #136]	; (8000378 <GPIO_PeriControl_Clock+0x190>)
 80002f0:	4293      	cmp	r3, r2
 80002f2:	d106      	bne.n	8000302 <GPIO_PeriControl_Clock+0x11a>
    						GPIOE_PCLK_DIS();
 80002f4:	4b1c      	ldr	r3, [pc, #112]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 80002f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f8:	4a1b      	ldr	r2, [pc, #108]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 80002fa:	f023 0310 	bic.w	r3, r3, #16
 80002fe:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000300:	e02a      	b.n	8000358 <GPIO_PeriControl_Clock+0x170>
    	else if (pGPIOx == GPIOF)
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	4a1d      	ldr	r2, [pc, #116]	; (800037c <GPIO_PeriControl_Clock+0x194>)
 8000306:	4293      	cmp	r3, r2
 8000308:	d106      	bne.n	8000318 <GPIO_PeriControl_Clock+0x130>
    						GPIOF_PCLK_DIS();
 800030a:	4b17      	ldr	r3, [pc, #92]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 800030c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800030e:	4a16      	ldr	r2, [pc, #88]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 8000310:	f023 0320 	bic.w	r3, r3, #32
 8000314:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000316:	e01f      	b.n	8000358 <GPIO_PeriControl_Clock+0x170>
    	else if (pGPIOx == GPIOG)
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	4a1a      	ldr	r2, [pc, #104]	; (8000384 <GPIO_PeriControl_Clock+0x19c>)
 800031c:	4293      	cmp	r3, r2
 800031e:	d106      	bne.n	800032e <GPIO_PeriControl_Clock+0x146>
    						GPIOG_PCLK_DIS();
 8000320:	4b11      	ldr	r3, [pc, #68]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 8000322:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000324:	4a10      	ldr	r2, [pc, #64]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 8000326:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800032a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800032c:	e014      	b.n	8000358 <GPIO_PeriControl_Clock+0x170>
    	else if (pGPIOx == GPIOH)
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	4a15      	ldr	r2, [pc, #84]	; (8000388 <GPIO_PeriControl_Clock+0x1a0>)
 8000332:	4293      	cmp	r3, r2
 8000334:	d106      	bne.n	8000344 <GPIO_PeriControl_Clock+0x15c>
    						GPIOH_PCLK_DIS();
 8000336:	4b0c      	ldr	r3, [pc, #48]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 8000338:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800033a:	4a0b      	ldr	r2, [pc, #44]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 800033c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000340:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000342:	e009      	b.n	8000358 <GPIO_PeriControl_Clock+0x170>
    	else if (pGPIOx == GPIOI)
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	4a0e      	ldr	r2, [pc, #56]	; (8000380 <GPIO_PeriControl_Clock+0x198>)
 8000348:	4293      	cmp	r3, r2
 800034a:	d105      	bne.n	8000358 <GPIO_PeriControl_Clock+0x170>
    						GPIOI_PCLK_DIS();
 800034c:	4b06      	ldr	r3, [pc, #24]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 800034e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000350:	4a05      	ldr	r2, [pc, #20]	; (8000368 <GPIO_PeriControl_Clock+0x180>)
 8000352:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000356:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000358:	bf00      	nop
 800035a:	370c      	adds	r7, #12
 800035c:	46bd      	mov	sp, r7
 800035e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000362:	4770      	bx	lr
 8000364:	40020000 	.word	0x40020000
 8000368:	40023800 	.word	0x40023800
 800036c:	40020400 	.word	0x40020400
 8000370:	40020800 	.word	0x40020800
 8000374:	40020c00 	.word	0x40020c00
 8000378:	40021000 	.word	0x40021000
 800037c:	40021400 	.word	0x40021400
 8000380:	40022000 	.word	0x40022000
 8000384:	40021800 	.word	0x40021800
 8000388:	40021c00 	.word	0x40021c00

0800038c <GPIO_Init>:
* @Note				:

************************************************************/

void GPIO_Init(GPIO_Handle_t *P_GPIO_Handle)
{
 800038c:	b580      	push	{r7, lr}
 800038e:	b086      	sub	sp, #24
 8000390:	af00      	add	r7, sp, #0
 8000392:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;//temp register.
 8000394:	2300      	movs	r3, #0
 8000396:	617b      	str	r3, [r7, #20]

// 	1.Enable the clock Peripheral

	GPIO_PeriControl_Clock(P_GPIO_Handle->pGPIOx,ENABLE);
 8000398:	687b      	ldr	r3, [r7, #4]
 800039a:	681b      	ldr	r3, [r3, #0]
 800039c:	2101      	movs	r1, #1
 800039e:	4618      	mov	r0, r3
 80003a0:	f7ff ff22 	bl	80001e8 <GPIO_PeriControl_Clock>

//	2.Configure the mode of the GPIO Pin

	if(P_GPIO_Handle->GPIO_PinConfig.GPIO_PinMode <=GPIO_MODE_ANALOG){
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	795b      	ldrb	r3, [r3, #5]
 80003a8:	2b03      	cmp	r3, #3
 80003aa:	d822      	bhi.n	80003f2 <GPIO_Init+0x66>
	temp=P_GPIO_Handle->GPIO_PinConfig.GPIO_PinMode << (2* P_GPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 80003ac:	687b      	ldr	r3, [r7, #4]
 80003ae:	795b      	ldrb	r3, [r3, #5]
 80003b0:	461a      	mov	r2, r3
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	791b      	ldrb	r3, [r3, #4]
 80003b6:	005b      	lsls	r3, r3, #1
 80003b8:	fa02 f303 	lsl.w	r3, r2, r3
 80003bc:	617b      	str	r3, [r7, #20]

	P_GPIO_Handle->pGPIOx->MODER &= ~(3<< (2* P_GPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));//For Good Practice
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	681b      	ldr	r3, [r3, #0]
 80003c2:	681a      	ldr	r2, [r3, #0]
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	791b      	ldrb	r3, [r3, #4]
 80003c8:	005b      	lsls	r3, r3, #1
 80003ca:	2103      	movs	r1, #3
 80003cc:	fa01 f303 	lsl.w	r3, r1, r3
 80003d0:	43db      	mvns	r3, r3
 80003d2:	4619      	mov	r1, r3
 80003d4:	687b      	ldr	r3, [r7, #4]
 80003d6:	681b      	ldr	r3, [r3, #0]
 80003d8:	400a      	ands	r2, r1
 80003da:	601a      	str	r2, [r3, #0]
	P_GPIO_Handle->pGPIOx->MODER |=temp;
 80003dc:	687b      	ldr	r3, [r7, #4]
 80003de:	681b      	ldr	r3, [r3, #0]
 80003e0:	6819      	ldr	r1, [r3, #0]
 80003e2:	687b      	ldr	r3, [r7, #4]
 80003e4:	681b      	ldr	r3, [r3, #0]
 80003e6:	697a      	ldr	r2, [r7, #20]
 80003e8:	430a      	orrs	r2, r1
 80003ea:	601a      	str	r2, [r3, #0]
	temp=0;
 80003ec:	2300      	movs	r3, #0
 80003ee:	617b      	str	r3, [r7, #20]
 80003f0:	e0cb      	b.n	800058a <GPIO_Init+0x1fe>
	}
	else
	{
			if (P_GPIO_Handle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT){
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	795b      	ldrb	r3, [r3, #5]
 80003f6:	2b04      	cmp	r3, #4
 80003f8:	d10b      	bne.n	8000412 <GPIO_Init+0x86>
				//1. Configure the FTSR
				EXTI->EXTI_FTSR |=(1<<P_GPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 80003fa:	4b4b      	ldr	r3, [pc, #300]	; (8000528 <GPIO_Init+0x19c>)
 80003fc:	68db      	ldr	r3, [r3, #12]
 80003fe:	687a      	ldr	r2, [r7, #4]
 8000400:	7912      	ldrb	r2, [r2, #4]
 8000402:	4611      	mov	r1, r2
 8000404:	2201      	movs	r2, #1
 8000406:	408a      	lsls	r2, r1
 8000408:	4611      	mov	r1, r2
 800040a:	4a47      	ldr	r2, [pc, #284]	; (8000528 <GPIO_Init+0x19c>)
 800040c:	430b      	orrs	r3, r1
 800040e:	60d3      	str	r3, [r2, #12]
 8000410:	e042      	b.n	8000498 <GPIO_Init+0x10c>
			}else if(P_GPIO_Handle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT){
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	795b      	ldrb	r3, [r3, #5]
 8000416:	2b05      	cmp	r3, #5
 8000418:	d117      	bne.n	800044a <GPIO_Init+0xbe>
//			clear the corresponding RTSR bit as well
				EXTI->EXTI_RTSR &=~(1<<P_GPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 800041a:	4b43      	ldr	r3, [pc, #268]	; (8000528 <GPIO_Init+0x19c>)
 800041c:	689b      	ldr	r3, [r3, #8]
 800041e:	687a      	ldr	r2, [r7, #4]
 8000420:	7912      	ldrb	r2, [r2, #4]
 8000422:	4611      	mov	r1, r2
 8000424:	2201      	movs	r2, #1
 8000426:	408a      	lsls	r2, r1
 8000428:	43d2      	mvns	r2, r2
 800042a:	4611      	mov	r1, r2
 800042c:	4a3e      	ldr	r2, [pc, #248]	; (8000528 <GPIO_Init+0x19c>)
 800042e:	400b      	ands	r3, r1
 8000430:	6093      	str	r3, [r2, #8]
//			1. Configure the RTSR
				EXTI->EXTI_RTSR |=(1<<P_GPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 8000432:	4b3d      	ldr	r3, [pc, #244]	; (8000528 <GPIO_Init+0x19c>)
 8000434:	689b      	ldr	r3, [r3, #8]
 8000436:	687a      	ldr	r2, [r7, #4]
 8000438:	7912      	ldrb	r2, [r2, #4]
 800043a:	4611      	mov	r1, r2
 800043c:	2201      	movs	r2, #1
 800043e:	408a      	lsls	r2, r1
 8000440:	4611      	mov	r1, r2
 8000442:	4a39      	ldr	r2, [pc, #228]	; (8000528 <GPIO_Init+0x19c>)
 8000444:	430b      	orrs	r3, r1
 8000446:	6093      	str	r3, [r2, #8]
 8000448:	e026      	b.n	8000498 <GPIO_Init+0x10c>

			}else if(P_GPIO_Handle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT){
 800044a:	687b      	ldr	r3, [r7, #4]
 800044c:	795b      	ldrb	r3, [r3, #5]
 800044e:	2b06      	cmp	r3, #6
 8000450:	d122      	bne.n	8000498 <GPIO_Init+0x10c>
				//			clear the corresponding RTSR bit as well
				EXTI->EXTI_RTSR &=~(1<<P_GPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 8000452:	4b35      	ldr	r3, [pc, #212]	; (8000528 <GPIO_Init+0x19c>)
 8000454:	689b      	ldr	r3, [r3, #8]
 8000456:	687a      	ldr	r2, [r7, #4]
 8000458:	7912      	ldrb	r2, [r2, #4]
 800045a:	4611      	mov	r1, r2
 800045c:	2201      	movs	r2, #1
 800045e:	408a      	lsls	r2, r1
 8000460:	43d2      	mvns	r2, r2
 8000462:	4611      	mov	r1, r2
 8000464:	4a30      	ldr	r2, [pc, #192]	; (8000528 <GPIO_Init+0x19c>)
 8000466:	400b      	ands	r3, r1
 8000468:	6093      	str	r3, [r2, #8]

				//1. Configure both the FTSR and RTSR
				EXTI->EXTI_FTSR |=(1<<P_GPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 800046a:	4b2f      	ldr	r3, [pc, #188]	; (8000528 <GPIO_Init+0x19c>)
 800046c:	68db      	ldr	r3, [r3, #12]
 800046e:	687a      	ldr	r2, [r7, #4]
 8000470:	7912      	ldrb	r2, [r2, #4]
 8000472:	4611      	mov	r1, r2
 8000474:	2201      	movs	r2, #1
 8000476:	408a      	lsls	r2, r1
 8000478:	4611      	mov	r1, r2
 800047a:	4a2b      	ldr	r2, [pc, #172]	; (8000528 <GPIO_Init+0x19c>)
 800047c:	430b      	orrs	r3, r1
 800047e:	60d3      	str	r3, [r2, #12]
				EXTI->EXTI_RTSR &=~(1<<P_GPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 8000480:	4b29      	ldr	r3, [pc, #164]	; (8000528 <GPIO_Init+0x19c>)
 8000482:	689b      	ldr	r3, [r3, #8]
 8000484:	687a      	ldr	r2, [r7, #4]
 8000486:	7912      	ldrb	r2, [r2, #4]
 8000488:	4611      	mov	r1, r2
 800048a:	2201      	movs	r2, #1
 800048c:	408a      	lsls	r2, r1
 800048e:	43d2      	mvns	r2, r2
 8000490:	4611      	mov	r1, r2
 8000492:	4a25      	ldr	r2, [pc, #148]	; (8000528 <GPIO_Init+0x19c>)
 8000494:	400b      	ands	r3, r1
 8000496:	6093      	str	r3, [r2, #8]

			}

			//2. Configure the GPIO port selection in SYSCFG_EXTICR
			uint8_t temp1=P_GPIO_Handle->GPIO_PinConfig.GPIO_PinNumber/4;
 8000498:	687b      	ldr	r3, [r7, #4]
 800049a:	791b      	ldrb	r3, [r3, #4]
 800049c:	089b      	lsrs	r3, r3, #2
 800049e:	74fb      	strb	r3, [r7, #19]
			uint8_t temp2=P_GPIO_Handle->GPIO_PinConfig.GPIO_PinNumber %4;
 80004a0:	687b      	ldr	r3, [r7, #4]
 80004a2:	791b      	ldrb	r3, [r3, #4]
 80004a4:	f003 0303 	and.w	r3, r3, #3
 80004a8:	74bb      	strb	r3, [r7, #18]
			uint8_t portcode=GPIO_BASEADDR_TO_CODE(P_GPIO_Handle->pGPIOx);
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	681b      	ldr	r3, [r3, #0]
 80004ae:	4a1f      	ldr	r2, [pc, #124]	; (800052c <GPIO_Init+0x1a0>)
 80004b0:	4293      	cmp	r3, r2
 80004b2:	d04d      	beq.n	8000550 <GPIO_Init+0x1c4>
 80004b4:	687b      	ldr	r3, [r7, #4]
 80004b6:	681b      	ldr	r3, [r3, #0]
 80004b8:	4a1d      	ldr	r2, [pc, #116]	; (8000530 <GPIO_Init+0x1a4>)
 80004ba:	4293      	cmp	r3, r2
 80004bc:	d032      	beq.n	8000524 <GPIO_Init+0x198>
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	681b      	ldr	r3, [r3, #0]
 80004c2:	4a1c      	ldr	r2, [pc, #112]	; (8000534 <GPIO_Init+0x1a8>)
 80004c4:	4293      	cmp	r3, r2
 80004c6:	d02b      	beq.n	8000520 <GPIO_Init+0x194>
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	681b      	ldr	r3, [r3, #0]
 80004cc:	4a1a      	ldr	r2, [pc, #104]	; (8000538 <GPIO_Init+0x1ac>)
 80004ce:	4293      	cmp	r3, r2
 80004d0:	d024      	beq.n	800051c <GPIO_Init+0x190>
 80004d2:	687b      	ldr	r3, [r7, #4]
 80004d4:	681b      	ldr	r3, [r3, #0]
 80004d6:	4a19      	ldr	r2, [pc, #100]	; (800053c <GPIO_Init+0x1b0>)
 80004d8:	4293      	cmp	r3, r2
 80004da:	d01d      	beq.n	8000518 <GPIO_Init+0x18c>
 80004dc:	687b      	ldr	r3, [r7, #4]
 80004de:	681b      	ldr	r3, [r3, #0]
 80004e0:	4a17      	ldr	r2, [pc, #92]	; (8000540 <GPIO_Init+0x1b4>)
 80004e2:	4293      	cmp	r3, r2
 80004e4:	d016      	beq.n	8000514 <GPIO_Init+0x188>
 80004e6:	687b      	ldr	r3, [r7, #4]
 80004e8:	681b      	ldr	r3, [r3, #0]
 80004ea:	4a16      	ldr	r2, [pc, #88]	; (8000544 <GPIO_Init+0x1b8>)
 80004ec:	4293      	cmp	r3, r2
 80004ee:	d00f      	beq.n	8000510 <GPIO_Init+0x184>
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	681b      	ldr	r3, [r3, #0]
 80004f4:	4a14      	ldr	r2, [pc, #80]	; (8000548 <GPIO_Init+0x1bc>)
 80004f6:	4293      	cmp	r3, r2
 80004f8:	d008      	beq.n	800050c <GPIO_Init+0x180>
 80004fa:	687b      	ldr	r3, [r7, #4]
 80004fc:	681b      	ldr	r3, [r3, #0]
 80004fe:	4a13      	ldr	r2, [pc, #76]	; (800054c <GPIO_Init+0x1c0>)
 8000500:	4293      	cmp	r3, r2
 8000502:	d101      	bne.n	8000508 <GPIO_Init+0x17c>
 8000504:	2308      	movs	r3, #8
 8000506:	e024      	b.n	8000552 <GPIO_Init+0x1c6>
 8000508:	2300      	movs	r3, #0
 800050a:	e022      	b.n	8000552 <GPIO_Init+0x1c6>
 800050c:	2307      	movs	r3, #7
 800050e:	e020      	b.n	8000552 <GPIO_Init+0x1c6>
 8000510:	2306      	movs	r3, #6
 8000512:	e01e      	b.n	8000552 <GPIO_Init+0x1c6>
 8000514:	2305      	movs	r3, #5
 8000516:	e01c      	b.n	8000552 <GPIO_Init+0x1c6>
 8000518:	2304      	movs	r3, #4
 800051a:	e01a      	b.n	8000552 <GPIO_Init+0x1c6>
 800051c:	2303      	movs	r3, #3
 800051e:	e018      	b.n	8000552 <GPIO_Init+0x1c6>
 8000520:	2302      	movs	r3, #2
 8000522:	e016      	b.n	8000552 <GPIO_Init+0x1c6>
 8000524:	2301      	movs	r3, #1
 8000526:	e014      	b.n	8000552 <GPIO_Init+0x1c6>
 8000528:	40013c00 	.word	0x40013c00
 800052c:	40020000 	.word	0x40020000
 8000530:	40020400 	.word	0x40020400
 8000534:	40020800 	.word	0x40020800
 8000538:	40020c00 	.word	0x40020c00
 800053c:	40021000 	.word	0x40021000
 8000540:	40021400 	.word	0x40021400
 8000544:	40021800 	.word	0x40021800
 8000548:	40021c00 	.word	0x40021c00
 800054c:	40022000 	.word	0x40022000
 8000550:	2300      	movs	r3, #0
 8000552:	747b      	strb	r3, [r7, #17]
			SYSCFG_PCLK_EN();
 8000554:	4b5c      	ldr	r3, [pc, #368]	; (80006c8 <GPIO_Init+0x33c>)
 8000556:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000558:	4a5b      	ldr	r2, [pc, #364]	; (80006c8 <GPIO_Init+0x33c>)
 800055a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800055e:	6453      	str	r3, [r2, #68]	; 0x44
			SYSCFG->EXTICR[temp1]=(portcode <<(4*temp2));
 8000560:	7c7a      	ldrb	r2, [r7, #17]
 8000562:	7cbb      	ldrb	r3, [r7, #18]
 8000564:	009b      	lsls	r3, r3, #2
 8000566:	fa02 f103 	lsl.w	r1, r2, r3
 800056a:	4a58      	ldr	r2, [pc, #352]	; (80006cc <GPIO_Init+0x340>)
 800056c:	7cfb      	ldrb	r3, [r7, #19]
 800056e:	3302      	adds	r3, #2
 8000570:	f842 1023 	str.w	r1, [r2, r3, lsl #2]


			//3. Enable the the EXTI interrupt using EXTI_IMR register
				EXTI->EXTI_IMR |=(1<<P_GPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 8000574:	4b56      	ldr	r3, [pc, #344]	; (80006d0 <GPIO_Init+0x344>)
 8000576:	681b      	ldr	r3, [r3, #0]
 8000578:	687a      	ldr	r2, [r7, #4]
 800057a:	7912      	ldrb	r2, [r2, #4]
 800057c:	4611      	mov	r1, r2
 800057e:	2201      	movs	r2, #1
 8000580:	408a      	lsls	r2, r1
 8000582:	4611      	mov	r1, r2
 8000584:	4a52      	ldr	r2, [pc, #328]	; (80006d0 <GPIO_Init+0x344>)
 8000586:	430b      	orrs	r3, r1
 8000588:	6013      	str	r3, [r2, #0]


	}
// 	3.Configure the speed;

	temp= (P_GPIO_Handle->GPIO_PinConfig.GPIO_PinSpeed << ((2* P_GPIO_Handle->GPIO_PinConfig.GPIO_PinNumber)));
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	799b      	ldrb	r3, [r3, #6]
 800058e:	461a      	mov	r2, r3
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	791b      	ldrb	r3, [r3, #4]
 8000594:	005b      	lsls	r3, r3, #1
 8000596:	fa02 f303 	lsl.w	r3, r2, r3
 800059a:	617b      	str	r3, [r7, #20]

	P_GPIO_Handle->pGPIOx->OSPEEDR &= ~(3<< (2* P_GPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));//For Good Practice
 800059c:	687b      	ldr	r3, [r7, #4]
 800059e:	681b      	ldr	r3, [r3, #0]
 80005a0:	689a      	ldr	r2, [r3, #8]
 80005a2:	687b      	ldr	r3, [r7, #4]
 80005a4:	791b      	ldrb	r3, [r3, #4]
 80005a6:	005b      	lsls	r3, r3, #1
 80005a8:	2103      	movs	r1, #3
 80005aa:	fa01 f303 	lsl.w	r3, r1, r3
 80005ae:	43db      	mvns	r3, r3
 80005b0:	4619      	mov	r1, r3
 80005b2:	687b      	ldr	r3, [r7, #4]
 80005b4:	681b      	ldr	r3, [r3, #0]
 80005b6:	400a      	ands	r2, r1
 80005b8:	609a      	str	r2, [r3, #8]
	P_GPIO_Handle->pGPIOx->OSPEEDR |=temp;
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	681b      	ldr	r3, [r3, #0]
 80005be:	6899      	ldr	r1, [r3, #8]
 80005c0:	687b      	ldr	r3, [r7, #4]
 80005c2:	681b      	ldr	r3, [r3, #0]
 80005c4:	697a      	ldr	r2, [r7, #20]
 80005c6:	430a      	orrs	r2, r1
 80005c8:	609a      	str	r2, [r3, #8]
	temp=0;
 80005ca:	2300      	movs	r3, #0
 80005cc:	617b      	str	r3, [r7, #20]

//  4. Configure the PuPD Settings.

	temp= (P_GPIO_Handle->GPIO_PinConfig.GPIO_PinPuPdControl << ((2*P_GPIO_Handle->GPIO_PinConfig.GPIO_PinNumber)));
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	7a1b      	ldrb	r3, [r3, #8]
 80005d2:	461a      	mov	r2, r3
 80005d4:	687b      	ldr	r3, [r7, #4]
 80005d6:	791b      	ldrb	r3, [r3, #4]
 80005d8:	005b      	lsls	r3, r3, #1
 80005da:	fa02 f303 	lsl.w	r3, r2, r3
 80005de:	617b      	str	r3, [r7, #20]

	P_GPIO_Handle->pGPIOx->PUPDR  &= ~(3<< (2* P_GPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));//For Good Practice
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	681b      	ldr	r3, [r3, #0]
 80005e4:	68da      	ldr	r2, [r3, #12]
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	791b      	ldrb	r3, [r3, #4]
 80005ea:	005b      	lsls	r3, r3, #1
 80005ec:	2103      	movs	r1, #3
 80005ee:	fa01 f303 	lsl.w	r3, r1, r3
 80005f2:	43db      	mvns	r3, r3
 80005f4:	4619      	mov	r1, r3
 80005f6:	687b      	ldr	r3, [r7, #4]
 80005f8:	681b      	ldr	r3, [r3, #0]
 80005fa:	400a      	ands	r2, r1
 80005fc:	60da      	str	r2, [r3, #12]
	P_GPIO_Handle->pGPIOx->PUPDR |=temp;
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	681b      	ldr	r3, [r3, #0]
 8000602:	68d9      	ldr	r1, [r3, #12]
 8000604:	687b      	ldr	r3, [r7, #4]
 8000606:	681b      	ldr	r3, [r3, #0]
 8000608:	697a      	ldr	r2, [r7, #20]
 800060a:	430a      	orrs	r2, r1
 800060c:	60da      	str	r2, [r3, #12]
	temp=0;
 800060e:	2300      	movs	r3, #0
 8000610:	617b      	str	r3, [r7, #20]

//  5. Configure the optype.

	temp= (P_GPIO_Handle->GPIO_PinConfig.GPIO_PinOpType << ((P_GPIO_Handle->GPIO_PinConfig.GPIO_PinNumber)));
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	79db      	ldrb	r3, [r3, #7]
 8000616:	461a      	mov	r2, r3
 8000618:	687b      	ldr	r3, [r7, #4]
 800061a:	791b      	ldrb	r3, [r3, #4]
 800061c:	fa02 f303 	lsl.w	r3, r2, r3
 8000620:	617b      	str	r3, [r7, #20]

	P_GPIO_Handle->pGPIOx->OSPEEDR &= ~(3<< (P_GPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));//For Good Practice
 8000622:	687b      	ldr	r3, [r7, #4]
 8000624:	681b      	ldr	r3, [r3, #0]
 8000626:	689a      	ldr	r2, [r3, #8]
 8000628:	687b      	ldr	r3, [r7, #4]
 800062a:	791b      	ldrb	r3, [r3, #4]
 800062c:	4619      	mov	r1, r3
 800062e:	2303      	movs	r3, #3
 8000630:	408b      	lsls	r3, r1
 8000632:	43db      	mvns	r3, r3
 8000634:	4619      	mov	r1, r3
 8000636:	687b      	ldr	r3, [r7, #4]
 8000638:	681b      	ldr	r3, [r3, #0]
 800063a:	400a      	ands	r2, r1
 800063c:	609a      	str	r2, [r3, #8]
	P_GPIO_Handle->pGPIOx->OSPEEDR |=temp;
 800063e:	687b      	ldr	r3, [r7, #4]
 8000640:	681b      	ldr	r3, [r3, #0]
 8000642:	6899      	ldr	r1, [r3, #8]
 8000644:	687b      	ldr	r3, [r7, #4]
 8000646:	681b      	ldr	r3, [r3, #0]
 8000648:	697a      	ldr	r2, [r7, #20]
 800064a:	430a      	orrs	r2, r1
 800064c:	609a      	str	r2, [r3, #8]
	temp=0;
 800064e:	2300      	movs	r3, #0
 8000650:	617b      	str	r3, [r7, #20]

//	6. Configure the ALT function mode.

	if(P_GPIO_Handle->GPIO_PinConfig.GPIO_PinAlltFunMode == GPIO_MODE_ALTFN)
 8000652:	687b      	ldr	r3, [r7, #4]
 8000654:	7a5b      	ldrb	r3, [r3, #9]
 8000656:	2b02      	cmp	r3, #2
 8000658:	d131      	bne.n	80006be <GPIO_Init+0x332>
	{
		uint8_t temp1,temp2;
		temp1=P_GPIO_Handle->GPIO_PinConfig.GPIO_PinNumber /8;
 800065a:	687b      	ldr	r3, [r7, #4]
 800065c:	791b      	ldrb	r3, [r3, #4]
 800065e:	08db      	lsrs	r3, r3, #3
 8000660:	743b      	strb	r3, [r7, #16]
		temp2=P_GPIO_Handle->GPIO_PinConfig.GPIO_PinNumber %8;
 8000662:	687b      	ldr	r3, [r7, #4]
 8000664:	791b      	ldrb	r3, [r3, #4]
 8000666:	f003 0307 	and.w	r3, r3, #7
 800066a:	73fb      	strb	r3, [r7, #15]
		P_GPIO_Handle->pGPIOx->AF[temp1] &=~(15<<4*temp2);
 800066c:	687b      	ldr	r3, [r7, #4]
 800066e:	681b      	ldr	r3, [r3, #0]
 8000670:	7c3a      	ldrb	r2, [r7, #16]
 8000672:	3208      	adds	r2, #8
 8000674:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000678:	7bfb      	ldrb	r3, [r7, #15]
 800067a:	009b      	lsls	r3, r3, #2
 800067c:	220f      	movs	r2, #15
 800067e:	fa02 f303 	lsl.w	r3, r2, r3
 8000682:	43db      	mvns	r3, r3
 8000684:	4618      	mov	r0, r3
 8000686:	687b      	ldr	r3, [r7, #4]
 8000688:	681b      	ldr	r3, [r3, #0]
 800068a:	7c3a      	ldrb	r2, [r7, #16]
 800068c:	4001      	ands	r1, r0
 800068e:	3208      	adds	r2, #8
 8000690:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		P_GPIO_Handle->pGPIOx->AF[temp1] |=(P_GPIO_Handle->GPIO_PinConfig.GPIO_PinAlltFunMode << (4 *temp2));
 8000694:	687b      	ldr	r3, [r7, #4]
 8000696:	681b      	ldr	r3, [r3, #0]
 8000698:	7c3a      	ldrb	r2, [r7, #16]
 800069a:	3208      	adds	r2, #8
 800069c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80006a0:	687b      	ldr	r3, [r7, #4]
 80006a2:	7a5b      	ldrb	r3, [r3, #9]
 80006a4:	461a      	mov	r2, r3
 80006a6:	7bfb      	ldrb	r3, [r7, #15]
 80006a8:	009b      	lsls	r3, r3, #2
 80006aa:	fa02 f303 	lsl.w	r3, r2, r3
 80006ae:	4618      	mov	r0, r3
 80006b0:	687b      	ldr	r3, [r7, #4]
 80006b2:	681b      	ldr	r3, [r3, #0]
 80006b4:	7c3a      	ldrb	r2, [r7, #16]
 80006b6:	4301      	orrs	r1, r0
 80006b8:	3208      	adds	r2, #8
 80006ba:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

	}


}
 80006be:	bf00      	nop
 80006c0:	3718      	adds	r7, #24
 80006c2:	46bd      	mov	sp, r7
 80006c4:	bd80      	pop	{r7, pc}
 80006c6:	bf00      	nop
 80006c8:	40023800 	.word	0x40023800
 80006cc:	40013800 	.word	0x40013800
 80006d0:	40013c00 	.word	0x40013c00

080006d4 <GPIO_ToggleOutputPin>:

************************************************************/

// XOR Operation
void GPIO_ToggleOutputPin(GPIO_REG_DEF_T *P_GPIOX,uint8_t PinNumber)
{
 80006d4:	b480      	push	{r7}
 80006d6:	b083      	sub	sp, #12
 80006d8:	af00      	add	r7, sp, #0
 80006da:	6078      	str	r0, [r7, #4]
 80006dc:	460b      	mov	r3, r1
 80006de:	70fb      	strb	r3, [r7, #3]
	P_GPIOX->ODR ^=(1<<PinNumber);
 80006e0:	687b      	ldr	r3, [r7, #4]
 80006e2:	695b      	ldr	r3, [r3, #20]
 80006e4:	78fa      	ldrb	r2, [r7, #3]
 80006e6:	2101      	movs	r1, #1
 80006e8:	fa01 f202 	lsl.w	r2, r1, r2
 80006ec:	405a      	eors	r2, r3
 80006ee:	687b      	ldr	r3, [r7, #4]
 80006f0:	615a      	str	r2, [r3, #20]
	return;
 80006f2:	bf00      	nop
}
 80006f4:	370c      	adds	r7, #12
 80006f6:	46bd      	mov	sp, r7
 80006f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006fc:	4770      	bx	lr
	...

08000700 <main>:
#include <stdio.h>
#include "Stm32F407xx.h"
#include "stm32f407xx_gpio_driver.h"

int main()
{
 8000700:	b580      	push	{r7, lr}
 8000702:	b084      	sub	sp, #16
 8000704:	af00      	add	r7, sp, #0

	GPIO_Handle_t GpioLED;

//	For Green LED

	GpioLED.pGPIOx=GPIOD;
 8000706:	4b0f      	ldr	r3, [pc, #60]	; (8000744 <main+0x44>)
 8000708:	603b      	str	r3, [r7, #0]
	GpioLED.GPIO_PinConfig.GPIO_PinNumber=GPIO_PIN_NO_12;
 800070a:	230c      	movs	r3, #12
 800070c:	713b      	strb	r3, [r7, #4]
	GpioLED.GPIO_PinConfig.GPIO_PinMode= GPIO_MODE_OUT;
 800070e:	2301      	movs	r3, #1
 8000710:	717b      	strb	r3, [r7, #5]
	GpioLED.GPIO_PinConfig.GPIO_PinSpeed= GPIO_SPEED_FAST;
 8000712:	2302      	movs	r3, #2
 8000714:	71bb      	strb	r3, [r7, #6]
	GpioLED.GPIO_PinConfig.GPIO_PinOpType= GPIO_OP_TYPE_PP;
 8000716:	2300      	movs	r3, #0
 8000718:	71fb      	strb	r3, [r7, #7]
	GpioLED.GPIO_PinConfig.GPIO_PinPuPdControl= GPIO_NO_PUPD;
 800071a:	2300      	movs	r3, #0
 800071c:	723b      	strb	r3, [r7, #8]

	GPIO_Init(&GpioLED);
 800071e:	463b      	mov	r3, r7
 8000720:	4618      	mov	r0, r3
 8000722:	f7ff fe33 	bl	800038c <GPIO_Init>
    /* Loop forever */
	for(;;)
	{


		GPIO_ToggleOutputPin(GPIOD,GPIO_PIN_NO_12);//Toggle Green LED
 8000726:	210c      	movs	r1, #12
 8000728:	4806      	ldr	r0, [pc, #24]	; (8000744 <main+0x44>)
 800072a:	f7ff ffd3 	bl	80006d4 <GPIO_ToggleOutputPin>



		for(uint32_t i=0;i<1000000;i++);// for Delay.
 800072e:	2300      	movs	r3, #0
 8000730:	60fb      	str	r3, [r7, #12]
 8000732:	e002      	b.n	800073a <main+0x3a>
 8000734:	68fb      	ldr	r3, [r7, #12]
 8000736:	3301      	adds	r3, #1
 8000738:	60fb      	str	r3, [r7, #12]
 800073a:	68fb      	ldr	r3, [r7, #12]
 800073c:	4a02      	ldr	r2, [pc, #8]	; (8000748 <main+0x48>)
 800073e:	4293      	cmp	r3, r2
 8000740:	d9f8      	bls.n	8000734 <main+0x34>
		GPIO_ToggleOutputPin(GPIOD,GPIO_PIN_NO_12);//Toggle Green LED
 8000742:	e7f0      	b.n	8000726 <main+0x26>
 8000744:	40020c00 	.word	0x40020c00
 8000748:	000f423f 	.word	0x000f423f

0800074c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800074c:	480d      	ldr	r0, [pc, #52]	; (8000784 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800074e:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000750:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000754:	480c      	ldr	r0, [pc, #48]	; (8000788 <LoopForever+0x6>)
  ldr r1, =_edata
 8000756:	490d      	ldr	r1, [pc, #52]	; (800078c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000758:	4a0d      	ldr	r2, [pc, #52]	; (8000790 <LoopForever+0xe>)
  movs r3, #0
 800075a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800075c:	e002      	b.n	8000764 <LoopCopyDataInit>

0800075e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800075e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000760:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000762:	3304      	adds	r3, #4

08000764 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000764:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000766:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000768:	d3f9      	bcc.n	800075e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800076a:	4a0a      	ldr	r2, [pc, #40]	; (8000794 <LoopForever+0x12>)
  ldr r4, =_ebss
 800076c:	4c0a      	ldr	r4, [pc, #40]	; (8000798 <LoopForever+0x16>)
  movs r3, #0
 800076e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000770:	e001      	b.n	8000776 <LoopFillZerobss>

08000772 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000772:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000774:	3204      	adds	r2, #4

08000776 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000776:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000778:	d3fb      	bcc.n	8000772 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800077a:	f000 f811 	bl	80007a0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800077e:	f7ff ffbf 	bl	8000700 <main>

08000782 <LoopForever>:

LoopForever:
    b LoopForever
 8000782:	e7fe      	b.n	8000782 <LoopForever>
  ldr   r0, =_estack
 8000784:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000788:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800078c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000790:	08000808 	.word	0x08000808
  ldr r2, =_sbss
 8000794:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000798:	2000001c 	.word	0x2000001c

0800079c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800079c:	e7fe      	b.n	800079c <ADC_IRQHandler>
	...

080007a0 <__libc_init_array>:
 80007a0:	b570      	push	{r4, r5, r6, lr}
 80007a2:	4d0d      	ldr	r5, [pc, #52]	; (80007d8 <__libc_init_array+0x38>)
 80007a4:	4c0d      	ldr	r4, [pc, #52]	; (80007dc <__libc_init_array+0x3c>)
 80007a6:	1b64      	subs	r4, r4, r5
 80007a8:	10a4      	asrs	r4, r4, #2
 80007aa:	2600      	movs	r6, #0
 80007ac:	42a6      	cmp	r6, r4
 80007ae:	d109      	bne.n	80007c4 <__libc_init_array+0x24>
 80007b0:	4d0b      	ldr	r5, [pc, #44]	; (80007e0 <__libc_init_array+0x40>)
 80007b2:	4c0c      	ldr	r4, [pc, #48]	; (80007e4 <__libc_init_array+0x44>)
 80007b4:	f000 f818 	bl	80007e8 <_init>
 80007b8:	1b64      	subs	r4, r4, r5
 80007ba:	10a4      	asrs	r4, r4, #2
 80007bc:	2600      	movs	r6, #0
 80007be:	42a6      	cmp	r6, r4
 80007c0:	d105      	bne.n	80007ce <__libc_init_array+0x2e>
 80007c2:	bd70      	pop	{r4, r5, r6, pc}
 80007c4:	f855 3b04 	ldr.w	r3, [r5], #4
 80007c8:	4798      	blx	r3
 80007ca:	3601      	adds	r6, #1
 80007cc:	e7ee      	b.n	80007ac <__libc_init_array+0xc>
 80007ce:	f855 3b04 	ldr.w	r3, [r5], #4
 80007d2:	4798      	blx	r3
 80007d4:	3601      	adds	r6, #1
 80007d6:	e7f2      	b.n	80007be <__libc_init_array+0x1e>
 80007d8:	08000800 	.word	0x08000800
 80007dc:	08000800 	.word	0x08000800
 80007e0:	08000800 	.word	0x08000800
 80007e4:	08000804 	.word	0x08000804

080007e8 <_init>:
 80007e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007ea:	bf00      	nop
 80007ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007ee:	bc08      	pop	{r3}
 80007f0:	469e      	mov	lr, r3
 80007f2:	4770      	bx	lr

080007f4 <_fini>:
 80007f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007f6:	bf00      	nop
 80007f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007fa:	bc08      	pop	{r3}
 80007fc:	469e      	mov	lr, r3
 80007fe:	4770      	bx	lr
